[
    {
        "product": "CC(=O)c1ccc(N)cc1",
        "input": "___>>CC(=O)c1ccc(N)cc1",
        "gold_answer": [
            "CC(=O)c1ccc([N+](=O)[O-])cc1"
        ],
        "answer": "CC(=O)c1ccc([N+](=O)[O-])cc1.Cl[Sn]Cl.[OH-].[Na+].Cl",
        "acc": 0,
        "all_tokens": 0
    },
    {
        "product": "O=C1CCC(=O)c2ccccc21",
        "input": "___>>O=C1CCC(=O)c2ccccc21",
        "gold_answer": [
            "O=C1C=CC(=O)c2ccccc21"
        ],
        "answer": "O=C1CCCc2ccccc21.O=O.[Cl-].[Al+3].[Cl-].[Cl-].Cl",
        "acc": 0,
        "all_tokens": 0
    },
    {
        "product": "CNC(=O)c1ccc2c(c1N)OCO2",
        "input": "___>>CNC(=O)c1ccc2c(c1N)OCO2",
        "gold_answer": [
            "CN",
            "Nc1c(C(=O)O)ccc2c1OCO2"
        ],
        "answer": "Nc1cc(C(=O)O)ccc1O.Cl.CN",
        "acc": 0,
        "all_tokens": 0
    },
    {
        "product": "COCCOc1cccc(Oc2ccc([N+](=O)[O-])cc2C)c1",
        "input": "___>>COCCOc1cccc(Oc2ccc([N+](=O)[O-])cc2C)c1",
        "gold_answer": [
            "COCCBr",
            "Cc1cc([N+](=O)[O-])ccc1Oc1cccc(O)c1"
        ],
        "answer": "Cc1cc([N+](=O)[O-])ccc1Oc1cccc(O)c1.C=COCC",
        "acc": 0,
        "all_tokens": 0
    },
    {
        "product": "O=C(NC1CCN(Cc2ccccc2)CC1)c1c[nH]c2ccc(F)cc12",
        "input": "___>>O=C(NC1CCN(Cc2ccccc2)CC1)c1c[nH]c2ccc(F)cc12",
        "gold_answer": [
            "NC1CCN(Cc2ccccc2)CC1",
            "O=C(O)c1c[nH]c2ccc(F)cc12"
        ],
        "answer": "",
        "acc": 0,
        "all_tokens": 0
    },
    {
        "product": "OCCN(Cc1ccccc1)c1ccc2c(-c3[nH]ncc3-c3cccc(Cl)c3)c[nH]c2n1",
        "input": "___>>OCCN(Cc1ccccc1)c1ccc2c(-c3[nH]ncc3-c3cccc(Cl)c3)c[nH]c2n1",
        "gold_answer": [
            "CC(C)(C)[Si](C)(C)OCCN(Cc1ccccc1)c1ccc2c(-c3[nH]ncc3-c3cccc(Cl)c3)c[nH]c2n1"
        ],
        "answer": "",
        "acc": 0,
        "all_tokens": 0
    },
    {
        "product": "CC(O)(C#Cc1cc2c(cc1F)OCCn1cc(C(N)=O)nc1-2)C(F)(F)F",
        "input": "___>>CC(O)(C#Cc1cc2c(cc1F)OCCn1cc(C(N)=O)nc1-2)C(F)(F)F",
        "gold_answer": [
            "C#CC(C)(O)C(F)(F)F",
            "NC(=O)c1cn2c(n1)-c1cc(Br)c(F)cc1OCC2"
        ],
        "answer": "",
        "acc": 0,
        "all_tokens": 0
    },
    {
        "product": "O=C1CCCN1c1ccc(CBr)cn1",
        "input": "___>>O=C1CCCN1c1ccc(CBr)cn1",
        "gold_answer": [
            "Cc1ccc(N2CCCC2=O)nc1",
            "O=C1CCC(=O)N1Br"
        ],
        "answer": "",
        "acc": 0,
        "all_tokens": 0
    },
    {
        "product": "CC(C)CN(C(=O)c1nc2ccccc2n1CCC#N)[C@H]1C[C@@H](C(=O)N2CCOCC2)CN(C(=O)OC(C)(C)C)C1",
        "input": "___>>CC(C)CN(C(=O)c1nc2ccccc2n1CCC#N)[C@H]1C[C@@H](C(=O)N2CCOCC2)CN(C(=O)OC(C)(C)C)C1",
        "gold_answer": [
            "CC(C)CN(C(=O)c1nc2ccccc2n1CCC(N)=O)[C@H]1C[C@@H](C(=O)N2CCOCC2)CN(C(=O)OC(C)(C)C)C1"
        ],
        "answer": "",
        "acc": 0,
        "all_tokens": 0
    },
    {
        "product": "CCOC(=O)C1CCN(Cc2ccccc2)CC1",
        "input": "___>>CCOC(=O)C1CCN(Cc2ccccc2)CC1",
        "gold_answer": [
            "CCOC(=O)C1CCNCC1",
            "ClCc1ccccc1"
        ],
        "answer": "",
        "acc": 0,
        "all_tokens": 0
    },
    {
        "product": "COC(=O)Cc1cccc(OCCCCl)c1",
        "input": "___>>COC(=O)Cc1cccc(OCCCCl)c1",
        "gold_answer": [
            "COC(=O)Cc1cccc(O)c1",
            "ClCCCBr"
        ],
        "answer": "",
        "acc": 0,
        "all_tokens": 0
    },
    {
        "product": "CC(C)C[C@H](NC(=O)OC12CC3CC(CC(C3)C1)C2)C(=O)O",
        "input": "___>>CC(C)C[C@H](NC(=O)OC12CC3CC(CC(C3)C1)C2)C(=O)O",
        "gold_answer": [
            "CC(C)C[C@H](N)C(=O)O",
            "O=C(F)OC12CC3CC(CC(C3)C1)C2"
        ],
        "answer": "",
        "acc": 0,
        "all_tokens": 0
    },
    {
        "product": "O=[N+]([O-])c1cccnc1OCCO",
        "input": "___>>O=[N+]([O-])c1cccnc1OCCO",
        "gold_answer": [
            "O=[N+]([O-])c1cccnc1Cl",
            "OCCO"
        ],
        "answer": "",
        "acc": 0,
        "all_tokens": 0
    },
    {
        "product": "Cc1cc(O)ccc1-c1ccc(CC2CCN(C3CCCCC3)C2=O)c(Cl)c1",
        "input": "___>>Cc1cc(O)ccc1-c1ccc(CC2CCN(C3CCCCC3)C2=O)c(Cl)c1",
        "gold_answer": [
            "COc1ccc(-c2ccc(CC3CCN(C4CCCCC4)C3=O)c(Cl)c2)c(C)c1"
        ],
        "answer": "",
        "acc": 0,
        "all_tokens": 0
    },
    {
        "product": "CCCNC(=O)c1ccc(C)c(-c2nc(NCCCN(CC)CC)nc3c2ccc(=O)n3-c2c(F)cccc2F)c1",
        "input": "___>>CCCNC(=O)c1ccc(C)c(-c2nc(NCCCN(CC)CC)nc3c2ccc(=O)n3-c2c(F)cccc2F)c1",
        "gold_answer": [
            "CCCN",
            "CCN(CC)CCCNc1nc(-c2cc(C(=O)O)ccc2C)c2ccc(=O)n(-c3c(F)cccc3F)c2n1"
        ],
        "answer": "",
        "acc": 0,
        "all_tokens": 0
    },
    {
        "product": "COC(=O)CCCCCNC(=O)C=C1c2ccccc2-c2ccccc21",
        "input": "___>>COC(=O)CCCCCNC(=O)C=C1c2ccccc2-c2ccccc21",
        "gold_answer": [
            "COC(=O)CCCCCN",
            "O=C(O)C=C1c2ccccc2-c2ccccc21"
        ],
        "answer": "",
        "acc": 0,
        "all_tokens": 0
    },
    {
        "product": "CCC1(CC)OC(=O)N(C)c2ccc(Nc3cccc(Cl)c3Cl)cc21",
        "input": "___>>CCC1(CC)OC(=O)N(C)c2ccc(Nc3cccc(Cl)c3Cl)cc21",
        "gold_answer": [
            "CCC1(CC)OC(=O)N(C)c2ccc(N)cc21",
            "Clc1cccc(I)c1Cl"
        ],
        "answer": "",
        "acc": 0,
        "all_tokens": 0
    },
    {
        "product": "Nc1cnc(-c2ccc(C3CCC3)c(OCc3cc(F)ccc3Cl)c2F)cn1",
        "input": "___>>Nc1cnc(-c2ccc(C3CCC3)c(OCc3cc(F)ccc3Cl)c2F)cn1",
        "gold_answer": [
            "Fc1ccc(Cl)c(CBr)c1",
            "Nc1cnc(-c2ccc(C3CCC3)c(O)c2F)cn1"
        ],
        "answer": "",
        "acc": 0,
        "all_tokens": 0
    },
    {
        "product": "CCCn1cnc2c1c(=O)n(CC1CCC1)c(=O)n2CC1CCC1",
        "input": "___>>CCCn1cnc2c1c(=O)n(CC1CCC1)c(=O)n2CC1CCC1",
        "gold_answer": [
            "CCCCl",
            "O=c1c2[nH]cnc2n(CC2CCC2)c(=O)n1CC1CCC1"
        ],
        "answer": "",
        "acc": 0,
        "all_tokens": 0
    },
    {
        "product": "CC(C)C1(C)Cc2cc(O)c(Cl)c(Cl)c2C1=O",
        "input": "___>>CC(C)C1(C)Cc2cc(O)c(Cl)c(Cl)c2C1=O",
        "gold_answer": [
            "COc1cc2c(c(Cl)c1Cl)C(=O)C(C)(C(C)C)C2"
        ],
        "answer": "",
        "acc": 0,
        "all_tokens": 0
    }
]